@charset 'UTF-8';
/* Ресет */
/* My resets */
*
{
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
}

a
{
    text-decoration: none;
}

button
{
    border: none;
    outline: none;
    background: none;
}

input
{
    outline: none;
}

/* Eric Meyer's CSS Reset */
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video
{
    font: inherit;
    font-size: 100%;

    margin: 0;
    padding: 0;

    vertical-align: baseline;

    border: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section
{
    display: block;
}

html
{
    height: 100%;
}

body
{
    line-height: 1;
}

ol,
ul
{
    list-style: none;
}

blockquote,
q
{
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after
{
    content: '';
    content: none;
}

table
{
    border-spacing: 0;
    border-collapse: collapse;
}

/* Шрифты */
/* Библеотеки */
/* Глобальное */
.wrapper
{
    min-height: 100%;
}

.container
{
    max-width: 1200px;
    padding: 0 15px;
}

/* UI компоненты */
/* Модальное окно */
.modal
{
    position: fixed;
    z-index: 3;
    top: 0;
    left: 0;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    width: 100%;
    height: 100%;

    -webkit-transition: .7s ease all;
         -o-transition: .7s ease all;
            transition: .7s ease all;
    -webkit-transform: translateY(-100vh);
        -ms-transform: translateY(-100vh);
            transform: translateY(-100vh);
    pointer-events: none;

    opacity: 0;

    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}
.modal__inner
{
    min-width: 300px;
    max-width: none;
    min-height: 50px;
    max-height: none;
    padding: 10px;

    -webkit-transition: .3s all;
         -o-transition: .3s all;
            transition: .3s all;
    pointer-events: none;

    border-radius: 10px;
    background: white;
}
.modal__background
{
    position: fixed;
    z-index: 2;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    -webkit-transition: .5s all;
         -o-transition: .5s all;
            transition: .5s all;
    pointer-events: none;

    opacity: 0;
    background: rgba(0, 0, 0, .5);
}
.modal__background.active
{
    pointer-events: all;

    opacity: 1;
}
.modal.active
{
    -webkit-transform: translateY(0);
        -ms-transform: translateY(0);
            transform: translateY(0);
    pointer-events: all;

    opacity: 1;
}
.modal.active .modal__inner
{
    pointer-events: all;
}

/* Анимации */
/* Хедер */
/* Оснвоное */
/* Блок какой-то */
h1
{
    color: green;
}

/* Футер */
/* Адаптация */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
